@model StoreFrontLab.DATA.EF.Product

@{
    ViewBag.Title = $"{Model.ProductName}";
}
<section class="section" id="product">
    <div class="row">
        <div class="col-md-3">
            @Html.ActionLink("Back to Products", "Index", "Products", null, new { @class = "btn" })
        </div>
    </div>
    <div class="container" id="prodRemove">
        <div class="row" id="Product-@Model.ProductID">
            <div class="col-lg-8">
                <div class="left-images">
                    <img class="detailsImg" src="~/Content/assets/images/products/@Model.Image" alt="@Model.ProductName">
                </div>
            </div>
            <div class="col-lg-4">
                <div class="right-content">
                    <h4>@Model.ProductName</h4>
                    <span class="price">@Html.DisplayFor(model => model.Price)</span>
                    <ul class="stars2">
                        @Html.DisplayFor(model => model.StockStatus.StockStatusName)
                    </ul>
                    <ul class="stars">
                        Quantity: @Model.Quantity
                    </ul>
                    <span>@Model.Description</span>

                    <div class="main-border-button" style="border-bottom: 1px solid #eee; padding-bottom: 1em;">

                        @using (Html.BeginForm("AddToCart", "Products", new { productID = Model.ProductID }, FormMethod.Post))
                        {

                            @Html.HiddenFor(x => x.ProductID)
                            <span class="label">Quantity</span>
                            @Html.TextBox("Qty", 1, new { @class = "form-control", @style = "max-width: 50px; display: inline; margin-right: 1em;" })
                            <input type="submit" value="Add to Cart" class="btn" name="qty" />

                        }
                    </div>

                    @if (User.IsInRole("Admin"))
                    {
                        <div>
                            @Html.ActionLink("Edit", "Edit", new { id = Model.ProductID }) |
                            @*<a href="" class="EditLink" id="@Model.ProductID">Edit</a> |*@

                            @*@Html.ActionLink("Delete", "Delete", new { id = Model.ProductID })*@
                            @Ajax.ActionLink("Delete", "AjaxDelete", "Products", new { id = Model.ProductID}, new AjaxOptions
                       {
                           HttpMethod = "POST",
                           Confirm = $"Are you sure you want to delete {Model.ProductName} from products?",
                           OnSuccess = "deleteConfirmed",
                           OnFailure = "deleteFailed"
                       }
                       )
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts {

    <script>
        //AJAX DELETE
        function deleteConfirmed(response, status, data) {

            $("#prodRemove").remove();

            $("#MessageContent").html("<div class='alert alert-success'>" + response.message + "</div>");
        }

        function deleteFailed(response, status, data) {

            $("#MessageContent").html("<div class='alert alert-danger'>Delete unsuccessful.</div>");
        }

        ////AJAX EDIT
        //var originalContent = null;
        //$("a.EditLink").click(function (e) {
        //    e.preventDefault();
        //    var productID = $(this).attr("id");

        //    var prod = $("#Product-" + productID);

        //    $.get("/Products/ProductEdit/" + productID, function (data) {
        //        $("#Product-" + productID)
        //    });

        //}
        //    });
    </script>

}